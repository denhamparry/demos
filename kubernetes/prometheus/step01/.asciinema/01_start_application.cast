{"version": 2, "width": 249, "height": 19, "timestamp": 1594904983, "env": {"SHELL": "/bin/bash", "TERM": "rxvt-unicode"}}
[0.045394, "o", "\u001b[m\u001b(B"]
[0.073297, "o", "\u001b]4;236;rgb:32/30/2f\u001b\\\u001b]4;234;rgb:1d/20/21\u001b\\\u001b]4;235;rgb:28/28/28\u001b\\\u001b]4;237;rgb:3c/38/36\u001b\\\u001b]4;239;rgb:50/49/45\u001b\\\u001b]4;241;rgb:66/5c/54\u001b\\\u001b]4;243;rgb:7c/6f/64\u001b\\\u001b]4;244;rgb:92/83/74\u001b\\\u001b]4;245;rgb:92/83/74\u001b\\\u001b]4;228;rgb:f2/e5/bc\u001b\\\u001b]4;230;rgb:f9/f5/d7\u001b\\\u001b]4;229;rgb:fb/f1/c7\u001b\\\u001b]4;223;rgb:eb/db/b2\u001b\\\u001b]4;250;rgb:d5/c4/a1\u001b\\\u001b]4;248;rgb:bd/ae/93\u001b\\\u001b]4;246;rgb:a8/99/84\u001b\\\u001b]4;167;rgb:fb/49/34\u001b\\\u001b]4;142;rgb:b8/bb/26\u001b\\\u001b]4;214;rgb:fa/bd/2f\u001b\\\u001b]4;109;rgb:83/a5/98\u001b\\\u001b]4;175;rgb:d3/86/9b\u001b\\\u001b]4;108;rgb:8e/c0/7c\u001b\\\u001b]4;208;rgb:fe/80/19\u001b\\\u001b]4;88;rgb:9d/00/06\u001b\\"]
[0.073337, "o", "\u001b]4;100;rgb:79/74/0e\u001b\\\u001b]4;136;rgb:b5/76/14\u001b\\\u001b]4;24;rgb:07/66/78\u001b\\\u001b]4;96;rgb:8f/3f/71\u001b\\\u001b]4;66;rgb:42/7b/58\u001b\\\u001b]4;130;rgb:af/3a/03\u001b\\"]
[0.207927, "o", "\u001b]0;~/git/denhamparry/demos/kubernetes/prometheus/step1\u0007\u001b[1m\r\r\n\u001b[38;5;33mlewis\u001b[38;5;15m at \u001b[38;5;37mbangs-macbook-pro\u001b[38;5;15m in \u001b[38;5;64m~/git/denhamparry/demos/kubernetes/prometheus/step1\u001b[38;5;15m on \u001b[38;5;61mprometheus\u001b[38;5;33m [?]\r\r\n\u001b[38;5;15m$ \u001b[m\u001b(B"]
[1.005588, "o", "m"]
[1.030793, "o", "a"]
[1.207204, "o", "k"]
[1.334161, "o", "e"]
[1.470722, "o", " "]
[2.263218, "o", "0"]
[2.855311, "o", "1"]
[3.786976, "o", "_start_application "]
[4.646075, "o", "\r\n"]
[4.647629, "o", "echo \"\"\r\necho \"************\"\r\necho \"We are building a Go application to expose custom metrics\"\r\necho \"The application can be seen in main.go\"\r\necho \"Search for the metric myapp_processed_ops_total in the codebase\"\r\necho \"What do you expect to happen when we run the application?\"\r\necho \"************\"\r\necho \"\"\r\nread  -n 1 -p \"Press any key to continue...\"\r\ngo run main.go &\r\n\r\necho \"\"\r\necho \"************\"\r\necho \"The application has started on localhost port 2112\"\r\necho \"Please try again\"\r\necho \"Try opening your browser to http://localhost:2112/metrics to view the application metrics\"\r\necho \"************\"\r\necho \"\"\r\nread  -n 1 -p \"Press any key to continue...\"\r\ncurl http://localhost:2112/metrics\r\ncurl http://localhost:2112/metrics | grep --color=always  \"cpu\"\r\necho \"\"\r\necho \"************\"\r\necho \"We can also curl localhost to view the metrics\"\r\necho \"There are lots of default metrics being shared such as CPU, Memory, Network and Disk\"\r\necho \"Can you see the custom metric that we created? (myapp_processed_ops_total)"]
[4.647708, "o", "\"\r\necho \"************\"\r\necho \"\"\r\nread  -n 1 -p \"Press any key to continue...\"\r\ncurl http://localhost:2112/metrics | grep --color=always  \"myapp_processed_ops_total\"\r\necho \"\"\r\necho \"************\"\r\necho \"Using grep we can easily find the metric\"\r\necho \"Why is this important?  What can we do with the metric?  Let's find out in the next section\"\r\necho \"But first, let's kill the app :)\"\r\necho \"************\"\r\necho \"\"\r\nread  -n 1 -p \"Press any key to continue...\"\r\nkillall main\r\n"]
[4.648268, "o", "\r\n"]
[4.64834, "o", "************\r\nWe are building a Go application to expose custom metrics\r\nThe application can be seen in main.go\r\nSearch for the metric myapp_processed_ops_total in the codebase\r\nWhat do you expect to happen when we run the application?\r\n************\r\n\r\nPress any key to continue..."]
[12.455598, "o", "\r\n"]
[12.456348, "o", "\r\n************\r\nThe application has started on localhost port 2112\r\n"]
[12.456592, "o", "Try opening your browser to http://localhost:2112/metrics to view the application metrics\r\n************\r\n\r\nPress any key to continue..."]
[19.671343, "o", "\r\n"]
[19.69475, "o", "# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\r\n# TYPE go_gc_duration_seconds summary\r\ngo_gc_duration_seconds{quantile=\"0\"} 0\r\ngo_gc_duration_seconds{quantile=\"0.25\"} 0\r\ngo_gc_duration_seconds{quantile=\"0.5\"} 0\r\ngo_gc_duration_seconds{quantile=\"0.75\"} 0\r\ngo_gc_duration_seconds{quantile=\"1\"} 0\r\ngo_gc_duration_seconds_sum 0\r\ngo_gc_duration_seconds_count 0\r\n# HELP go_goroutines Number of goroutines that currently exist.\r\n# TYPE go_goroutines gauge\r\ngo_goroutines 9\r\n# HELP go_info Information about the Go environment.\r\n# TYPE go_info gauge\r\ngo_info{version=\"go1.14.5\"} 1\r\n# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.\r\n# TYPE go_memstats_alloc_bytes gauge\r\ngo_memstats_alloc_bytes 716280\r\n# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.\r\n# TYPE go_memstats_alloc_bytes_total counter\r\ngo_memstats_alloc_bytes_total 716280\r\n# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash "]
[19.694992, "o", "table.\r\n# TYPE go_memstats_buck_hash_sys_bytes gauge\r\ngo_memstats_buck_hash_sys_bytes 3841\r\n# HELP go_memstats_frees_total Total number of frees.\r\n# TYPE go_memstats_frees_total counter\r\ngo_memstats_frees_total 92\r\n# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.\r\n# TYPE go_memstats_gc_cpu_fraction gauge\r\ngo_memstats_gc_cpu_fraction 0\r\n# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.\r\n# TYPE go_memstats_gc_sys_bytes gauge\r\ngo_memstats_gc_sys_bytes 3.436808e+06\r\n# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.\r\n# TYPE go_memstats_heap_alloc_bytes gauge\r\ngo_memstats_heap_alloc_bytes 716280\r\n# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.\r\n# TYPE go_memstats_heap_idle_bytes gauge\r\ngo_memstats_heap_idle_bytes 6.5060864e+07\r\n# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.\r\n# TYPE go_memstats_heap_inuse_byt"]
[19.695264, "o", "es gauge\r\ngo_memstats_heap_inuse_bytes 1.687552e+06\r\n# HELP go_memstats_heap_objects Number of allocated objects.\r\n# TYPE go_memstats_heap_objects gauge\r\ngo_memstats_heap_objects 2176\r\n# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.\r\n# TYPE go_memstats_heap_released_bytes gauge\r\ngo_memstats_heap_released_bytes 6.5060864e+07\r\n# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.\r\n# TYPE go_memstats_heap_sys_bytes gauge\r\ngo_memstats_heap_sys_bytes 6.6748416e+07\r\n# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.\r\n# TYPE go_memstats_last_gc_time_seconds gauge\r\ngo_memstats_last_gc_time_seconds 0\r\n# HELP go_memstats_lookups_total Total number of pointer lookups.\r\n# TYPE go_memstats_lookups_total counter\r\ngo_memstats_lookups_total 0\r\n# HELP go_memstats_mallocs_total Total number of mallocs.\r\n# TYPE go_memstats_mallocs_total counter\r\ngo_memstats_mallocs_total 2268\r\n# HELP go_memstats_mcache_inuse_bytes Number of bytes in"]
[19.695357, "o", " use by mcache structures.\r\n# TYPE go_memstats_mcache_inuse_bytes gauge\r\ngo_memstats_mcache_inuse_bytes 27776\r\n# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.\r\n# TYPE go_memstats_mcache_sys_bytes gauge\r\ngo_memstats_mcache_sys_bytes 32768\r\n# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.\r\n# TYPE go_memstats_mspan_inuse_bytes gauge\r\ngo_memstats_mspan_inuse_bytes 38080\r\n# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.\r\n# TYPE go_memstats_mspan_sys_bytes gauge\r\ngo_memstats_mspan_sys_bytes 49152\r\n# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.\r\n# TYPE go_memstats_next_gc_bytes gauge\r\ngo_memstats_next_gc_bytes 4.473924e+06\r\n# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.\r\n# TYPE go_memstats_other_sys_bytes gauge\r\ngo_memstats_other_sys_bytes 1.017855e+06\r\n# HELP go_memstats_stack_inuse_bytes Num"]
[19.695678, "o", "ber of bytes in use by the stack allocator.\r\n# TYPE go_memstats_stack_inuse_bytes gauge\r\ngo_memstats_stack_inuse_bytes 360448\r\n# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.\r\n# TYPE go_memstats_stack_sys_bytes gauge\r\ngo_memstats_stack_sys_bytes 360448\r\n# HELP go_memstats_sys_bytes Number of bytes obtained from system.\r\n# TYPE go_memstats_sys_bytes gauge\r\ngo_memstats_sys_bytes 7.1649288e+07\r\n# HELP go_threads Number of OS threads created.\r\n# TYPE go_threads gauge\r\ngo_threads 8\r\n# HELP myapp_processed_ops_total The total number of processed events\r\n# TYPE myapp_processed_ops_total counter\r\nmyapp_processed_ops_total 4\r\n# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.\r\n# TYPE process_cpu_seconds_total counter\r\nprocess_cpu_seconds_total 0\r\n# HELP process_max_fds Maximum number of open file descriptors.\r\n# TYPE process_max_fds gauge\r\nprocess_max_fds 8192\r\n# HELP process_open_fds Number of open file descriptors.\r\n# TYPE process_open_fds g"]
[19.695944, "o", "auge\r\nprocess_open_fds 67\r\n# HELP process_resident_memory_bytes Resident memory size in bytes.\r\n# TYPE process_resident_memory_bytes gauge\r\nprocess_resident_memory_bytes 1.5269888e+07\r\n# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.\r\n# TYPE process_start_time_seconds gauge\r\nprocess_start_time_seconds 1.59490499518e+09\r\n# HELP process_virtual_memory_bytes Virtual memory size in bytes.\r\n# TYPE process_virtual_memory_bytes gauge\r\nprocess_virtual_memory_bytes 1.183711232e+09\r\n# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.\r\n# TYPE process_virtual_memory_max_bytes gauge\r\nprocess_virtual_memory_max_bytes -1\r\n# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.\r\n# TYPE promhttp_metric_handler_requests_in_flight gauge\r\npromhttp_metric_handler_requests_in_flight 1\r\n# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.\r\n# TYPE promhttp_metric_handler_requests_to"]
[19.696229, "o", "tal counter\r\npromhttp_metric_handler_requests_total{code=\"200\"} 0\r\npromhttp_metric_handler_requests_total{code=\"500\"} 0\r\npromhttp_metric_handler_requests_total{code=\"503\"} 0\r\n"]
[19.714394, "o", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time "]
[19.714479, "o", " Current\r\n                            "]
[19.714515, "o", "     Dload  Up"]
[19.714552, "o", "load   Total  "]
[19.714764, "o", " Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:"]
[19.714862, "o", "-- --:--:--     0"]
[19.716494, "o", "\r100  6202    0  6202    0     0  3028"]
[19.716654, "o", "# HELP go_memstats_gc_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_fraction The fraction of this program's available CPU time used by the GC since the program started.\r\nk # TYPE go_memstats_gc_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_fraction gauge\r\n  go_memstats_gc_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_fraction 0\r\n   0 --:--:-- --:--:-- --:--:-- 3028k\r\n"]
[19.716705, "o", "# HELP process_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_seconds_total Total user and system CPU time spent in seconds.\r\n# TYPE process_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_seconds_total counter\r\nprocess_\u001b[01;31m\u001b[Kcpu\u001b[m\u001b[K_seconds_total 0\r\n"]
[19.717855, "o", "\r\n************\r\n"]
[19.717912, "o", "We can also curl localhost to view the metrics\r\nThere are lots of default metrics being shared such as CPU, Memory, Network and Disk\r\n"]
[19.717945, "o", "Can you see the custom metric that we created? (myapp_processed_ops_total)\r\n************\r\n\r\n"]
[19.718073, "o", "Press any key to continue..."]
[26.023479, "o", "\r\n"]
[26.031943, "o", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n           "]
[26.032014, "o", "                      Dload  Upload   Total   Spent    "]
[26.032182, "o", "Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0"]
[26.033693, "o", "\r100  6220    0  6220    0     0  60"]
[26.033849, "o", "74k      0 --:--:-- --:--:-- --:--:-- 6074k\r\n"]
[26.033937, "o", "# HELP \u001b[01;31m\u001b[Kmyapp_processed_ops_total\u001b[m\u001b[K The total number of processed events\r\n# TYPE \u001b[01;31m\u001b[Kmyapp_processed_ops_total\u001b[m\u001b[K counter\r\n\u001b[01;31m\u001b[Kmyapp_processed_ops_total\u001b[m\u001b[K 7\r\n"]
[26.034601, "o", "\r\n************\r\nUsing grep we can easily find the metric\r\nWhy is this important?  What can we do with the metric?  Let's find out in the next section\r\nBut first, let's kill the app :)\r\n************\r\n\r\n"]
[26.034619, "o", "Press any key to continue..."]
[33.615666, "o", "\r\n"]
[33.623575, "o", "signal: terminated\r\n"]
[33.635746, "o", "\u001b]0;~/git/denhamparry/demos/kubernetes/prometheus/step1\u0007\u001b[1m\r\r\n\u001b[38;5;33mlewis\u001b[38;5;15m at \u001b[38;5;37mbangs-macbook-pro\u001b[38;5;15m in \u001b[38;5;64m~/git/denhamparry/demos/kubernetes/prometheus/step1\u001b[38;5;15m on \u001b[38;5;61mprometheus\u001b[38;5;33m [?]\r\r\n\u001b[38;5;15m$ \u001b[m\u001b(B"]
[36.247499, "o", "exit\r\n"]
